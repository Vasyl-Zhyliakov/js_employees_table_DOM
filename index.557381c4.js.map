{"mappings":"A,S,E,C,C,C,E,C,A,M,G,E,E,M,A,G,C,E,E,M,A,E,I,I,E,E,E,A,M,G,E,E,I,C,C,E,C,C,C,E,C,O,C,CCGA,IA6HsB,EACd,EAIA,EAlIF,EAAQ,SAAS,aAAa,CAAC,SAC/B,EAAU,EAAM,KAAK,CAAC,gBAAgB,CAAC,MACvC,EAAY,EAAM,aAAa,CAAC,SAEtC,SAAS,EAAU,CAAK,EACtB,MAAO,CAAC,EAAM,KAAK,CAAC,GAAG,UAAU,CAAC,IAAK,GACzC,CAEA,EAAQ,OAAO,CAAC,SAAC,CAAA,CAAQ,CAAzB,EACE,EAAO,gBAAgB,CAAC,QAAS,WAC/B,I,EAAM,EAAa,EAAO,SAAS,CAC7B,EAAQ,AAAyB,QAAzB,EAAO,OAAO,CAAC,KAAK,CAE5B,E,A,S,C,E,G,M,O,C,G,O,E,E,E,EAAW,EAAU,gBAAgB,CAAC,Q,A,S,C,E,G,A,a,O,Q,A,M,C,C,O,Q,C,E,A,M,C,C,a,C,O,M,I,C,E,E,I,A,S,C,C,C,E,G,G,G,A,U,O,E,O,E,E,K,G,I,E,O,S,C,Q,C,I,C,G,K,C,E,I,G,W,G,E,W,E,C,E,E,W,C,I,A,E,A,Q,G,A,Q,E,O,M,I,C,G,G,A,c,G,2C,I,C,G,O,E,E,K,G,E,I,A,W,M,A,U,wI,IAE5C,EAAQ,OAAO,CAAC,SAAC,CAAjB,EACM,IAAM,GACR,EAAE,eAAe,CAAC,aAEtB,GAEA,EAAK,IAAI,CAAC,SAAC,CAAA,CAAG,CAAd,EACE,IAAM,EAAQ,EAAE,KAAK,CAAC,EAAM,CAAC,SAAS,CAChC,EAAQ,EAAE,KAAK,CAAC,EAAM,CAAC,SAAS,CAEtC,OAAQ,GACN,IAAK,OACL,IAAK,WACL,IAAK,SACH,OAAO,EACH,EAAM,aAAa,CAAC,GACpB,EAAM,aAAa,CAAC,EAE1B,KAAK,MACH,OAAO,EAAQ,CAAC,EAAQ,EAAQ,CAAC,EAAQ,CAAC,CAE5C,KAAK,SACH,OAAO,EACH,EAAU,GAAS,EAAU,GAC7B,EAAU,GAAS,EAAU,EACrC,CACF,GAEA,EAAO,OAAO,CAAC,KAAK,CAAG,EAAQ,OAAS,MAExC,EAAK,OAAO,CAAC,SAAC,CAAd,EAAsB,OAAA,EAAU,MAAM,CA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","sources":["<anon>","src/scripts/main.js"],"sourcesContent":["\"use strict\";\nfunction _array_like_to_array(arr, len) {\n    if (len == null || len > arr.length) len = arr.length;\n    for(var i = 0, arr2 = new Array(len); i < len; i++)arr2[i] = arr[i];\n    return arr2;\n}\nfunction _array_without_holes(arr) {\n    if (Array.isArray(arr)) return _array_like_to_array(arr);\n}\nfunction _iterable_to_array(iter) {\n    if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n}\nfunction _non_iterable_spread() {\n    throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\nfunction _to_consumable_array(arr) {\n    return _array_without_holes(arr) || _iterable_to_array(arr) || _unsupported_iterable_to_array(arr) || _non_iterable_spread();\n}\nfunction _unsupported_iterable_to_array(o, minLen) {\n    if (!o) return;\n    if (typeof o === \"string\") return _array_like_to_array(o, minLen);\n    var n = Object.prototype.toString.call(o).slice(8, -1);\n    if (n === \"Object\" && o.constructor) n = o.constructor.name;\n    if (n === \"Map\" || n === \"Set\") return Array.from(n);\n    if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _array_like_to_array(o, minLen);\n}\n// sorting\nvar table = document.querySelector(\"table\");\nvar headers = table.tHead.querySelectorAll(\"th\");\nvar tableBody = table.querySelector(\"tbody\");\nfunction getSalary(query) {\n    return +query.slice(1).replaceAll(\",\", \"\");\n}\nheaders.forEach(function(header, index) {\n    header.addEventListener(\"click\", function() {\n        var headerName = header.innerText;\n        var isAsc = header.dataset.order === \"asc\";\n        var rows = _to_consumable_array(tableBody.querySelectorAll(\"tr\"));\n        headers.forEach(function(h) {\n            if (h !== header) h.removeAttribute(\"data-order\");\n        });\n        rows.sort(function(a, b) {\n            var cellA = a.cells[index].innerText;\n            var cellB = b.cells[index].innerText;\n            switch(headerName){\n                case \"Name\":\n                case \"Position\":\n                case \"Office\":\n                    return isAsc ? cellB.localeCompare(cellA) : cellA.localeCompare(cellB);\n                case \"Age\":\n                    return isAsc ? +cellB - cellA : +cellA - +cellB;\n                case \"Salary\":\n                    return isAsc ? getSalary(cellB) - getSalary(cellA) : getSalary(cellA) - getSalary(cellB);\n            }\n        });\n        header.dataset.order = isAsc ? \"desc\" : \"asc\";\n        rows.forEach(function(row) {\n            return tableBody.append(row);\n        });\n    });\n    // selecting row\n    var activeRow = null;\n    tableBody.addEventListener(\"click\", function(e) {\n        var clickedRow = e.target.closest(\"tr\");\n        if (!clickedRow) return;\n        if (activeRow) activeRow.classList.remove(\"active\");\n        clickedRow.classList.add(\"active\");\n        activeRow = clickedRow;\n    });\n});\n// addingForm\nvar body = document.querySelector(\"body\");\nvar form = document.createElement(\"form\");\nform.className = \"new-employee-form\";\nbody.append(form);\nfunction changeFirstLetter(string) {\n    return string.slice(0, 1).toLowerCase() + string.slice(1);\n}\nfunction createInput(inputName) {\n    var label = document.createElement(\"label\");\n    label.textContent = \"\".concat(inputName, \":\");\n    var input = document.createElement(\"input\");\n    input.name = changeFirstLetter(inputName);\n    input.required = true;\n    input.dataset.qa = changeFirstLetter(inputName);\n    switch(inputName){\n        case \"Name\":\n            input.type = \"text\";\n            input.minLength = 4;\n            break;\n        case \"Position\":\n        default:\n            break;\n        case \"Age\":\n            input.type = \"number\";\n            input.min = 18;\n            input.max = 90;\n            break;\n        case \"Salary\":\n            input.type = \"number\";\n            input.min = 0;\n            break;\n    }\n    label.append(input);\n    return label;\n}\nvar offices = [\n    \"Tokyo\",\n    \"Singapore\",\n    \"London\",\n    \"New York\",\n    \"Edinburgh\",\n    \"San Francisco\"\n];\nfunction createSelect(selectName) {\n    var label = document.createElement(\"label\");\n    label.textContent = \"\".concat(selectName, \":\");\n    var select = document.createElement(\"select\");\n    select.name = \"\".concat(changeFirstLetter(selectName), \"s\");\n    select.required = true;\n    select.dataset.qa = changeFirstLetter(selectName);\n    offices.forEach(function(office) {\n        var option = document.createElement(\"option\");\n        option.textContent = office;\n        option.value = changeFirstLetter(office);\n        select.append(option);\n    });\n    label.append(select);\n    return label;\n}\nvar button = document.createElement(\"button\");\nbutton.type = \"submit\";\nbutton.textContent = \"Save to table\";\nform.append(createInput(\"Name\"));\nform.append(createInput(\"Position\"));\nform.append(createSelect(\"Office\"));\nform.append(createInput(\"Age\"));\nform.append(createInput(\"Salary\"));\nform.append(button);\n// adding new row\nfunction formatSalary(numb) {\n    var string = numb.toString();\n    var result = \"\";\n    if (string.length <= 3) return \"$\" + string;\n    var count = 0;\n    for(var i = string.length - 1; i >= 0; i--){\n        count++;\n        if (count % 3 === 0 && i !== 0) result = \",\" + string[i] + result;\n        else result = string[i] + result;\n    }\n    return \"$\" + result;\n}\nform.addEventListener(\"submit\", function(e) {\n    e.preventDefault();\n    var formData = new FormData(form);\n    var newRow = document.createElement(\"tr\");\n    formData.forEach(function(value, key) {\n        var cell = document.createElement(\"td\");\n        if (key === \"salary\") cell.textContent = formatSalary(value);\n        else cell.textContent = value;\n        newRow.append(cell);\n    });\n    tableBody.append(newRow);\n    form.reset();\n    var successMessage = document.createElement(\"div\");\n    successMessage.dataset.qa = \"notification\";\n    successMessage.className = \"notification success\";\n    successMessage.textContent = \"Employee added succesfully\";\n    document.body.appendChild(successMessage);\n    setTimeout(function() {\n        successMessage.remove();\n    }, 500);\n});\n\n//# sourceMappingURL=index.557381c4.js.map\n","'use strict';\n\n// sorting\nconst table = document.querySelector('table');\nconst headers = table.tHead.querySelectorAll('th');\nconst tableBody = table.querySelector('tbody');\n\nfunction getSalary(query) {\n  return +query.slice(1).replaceAll(',', '');\n}\n\nheaders.forEach((header, index) => {\n  header.addEventListener('click', () => {\n    const headerName = header.innerText;\n    const isAsc = header.dataset.order === 'asc';\n\n    const rows = [...tableBody.querySelectorAll('tr')];\n\n    headers.forEach((h) => {\n      if (h !== header) {\n        h.removeAttribute('data-order');\n      }\n    });\n\n    rows.sort((a, b) => {\n      const cellA = a.cells[index].innerText;\n      const cellB = b.cells[index].innerText;\n\n      switch (headerName) {\n        case 'Name':\n        case 'Position':\n        case 'Office':\n          return isAsc\n            ? cellB.localeCompare(cellA)\n            : cellA.localeCompare(cellB);\n\n        case 'Age':\n          return isAsc ? +cellB - cellA : +cellA - +cellB;\n\n        case 'Salary':\n          return isAsc\n            ? getSalary(cellB) - getSalary(cellA)\n            : getSalary(cellA) - getSalary(cellB);\n      }\n    });\n\n    header.dataset.order = isAsc ? 'desc' : 'asc';\n\n    rows.forEach((row) => tableBody.append(row));\n  });\n\n  // selecting row\n  let activeRow = null;\n\n  tableBody.addEventListener('click', (e) => {\n    const clickedRow = e.target.closest('tr');\n\n    if (!clickedRow) {\n      return;\n    }\n\n    if (activeRow) {\n      activeRow.classList.remove('active');\n    }\n\n    clickedRow.classList.add('active');\n    activeRow = clickedRow;\n  });\n});\n\n// addingForm\nconst body = document.querySelector('body');\nconst form = document.createElement('form');\n\nform.className = 'new-employee-form';\nbody.append(form);\n\nfunction changeFirstLetter(string) {\n  return string.slice(0, 1).toLowerCase() + string.slice(1);\n}\n\nfunction createInput(inputName) {\n  const label = document.createElement('label');\n\n  label.textContent = `${inputName}:`;\n\n  const input = document.createElement('input');\n\n  input.name = changeFirstLetter(inputName);\n  input.required = true;\n  input.dataset.qa = changeFirstLetter(inputName);\n\n  switch (inputName) {\n    case 'Name':\n      input.type = 'text';\n      input.minLength = 4;\n      break;\n\n    case 'Position':\n    default:\n      break;\n\n    case 'Age':\n      input.type = 'number';\n      input.min = 18;\n      input.max = 90;\n      break;\n\n    case 'Salary':\n      input.type = 'number';\n      input.min = 0;\n      break;\n  }\n\n  label.append(input);\n\n  return label;\n}\n\nconst offices = [\n  'Tokyo',\n  'Singapore',\n  'London',\n  'New York',\n  'Edinburgh',\n  'San Francisco',\n];\n\nfunction createSelect(selectName) {\n  const label = document.createElement('label');\n\n  label.textContent = `${selectName}:`;\n\n  const select = document.createElement('select');\n\n  select.name = `${changeFirstLetter(selectName)}s`;\n  select.required = true;\n  select.dataset.qa = changeFirstLetter(selectName);\n\n  offices.forEach((office) => {\n    const option = document.createElement('option');\n\n    option.textContent = office;\n    option.value = changeFirstLetter(office);\n    select.append(option);\n  });\n  label.append(select);\n\n  return label;\n}\n\nconst button = document.createElement('button');\n\nbutton.type = 'submit';\nbutton.textContent = 'Save to table';\n\nform.append(createInput('Name'));\nform.append(createInput('Position'));\nform.append(createSelect('Office'));\nform.append(createInput('Age'));\nform.append(createInput('Salary'));\nform.append(button);\n\n// adding new row\nfunction formatSalary(numb) {\n  const string = numb.toString();\n  let result = '';\n\n  if (string.length <= 3) {\n    return '$' + string;\n  }\n\n  let count = 0;\n\n  for (let i = string.length - 1; i >= 0; i--) {\n    count++;\n\n    if (count % 3 === 0 && i !== 0) {\n      result = ',' + string[i] + result;\n    } else {\n      result = string[i] + result;\n    }\n  }\n\n  return '$' + result;\n}\n\nform.addEventListener('submit', (e) => {\n  e.preventDefault();\n\n  const formData = new FormData(form);\n  const newRow = document.createElement('tr');\n\n  formData.forEach((value, key) => {\n    const cell = document.createElement('td');\n\n    if (key === 'salary') {\n      cell.textContent = formatSalary(value);\n    } else {\n      cell.textContent = value;\n    }\n    newRow.append(cell);\n  });\n\n  tableBody.append(newRow);\n\n  form.reset();\n\n  const successMessage = document.createElement('div');\n\n  successMessage.dataset.qa = 'notification';\n  successMessage.className = 'notification success';\n  successMessage.textContent = 'Employee added succesfully';\n\n  document.body.appendChild(successMessage);\n\n  setTimeout(() => {\n    successMessage.remove();\n  }, 500);\n});\n"],"names":["_array_like_to_array","arr","len","length","i","arr2","Array","selectName","label","select","table","document","querySelector","headers","tHead","querySelectorAll","tableBody","getSalary","query","slice","replaceAll","forEach","header","index","addEventListener","headerName","innerText","isAsc","dataset","order","rows","_array_without_holes","isArray","_iterable_to_array","iter","Symbol","iterator","from","_unsupported_iterable_to_array","o","minLen","n","Object","prototype","toString","call","constructor","name","test","_non_iterable_spread","TypeError","h","removeAttribute","sort","a","b","cellA","cells","cellB","localeCompare","row","append","activeRow","e","clickedRow","target","closest","classList","remove","add","body","form","createElement","changeFirstLetter","string","toLowerCase","createInput","inputName","textContent","concat","input","required","qa","type","minLength","min","max","className","button","offices","office","option","value","preventDefault","formData","FormData","newRow","key","cell","formatSalary","numb","result","count","reset","successMessage","appendChild","setTimeout"],"version":3,"file":"index.557381c4.js.map"}